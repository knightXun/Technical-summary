Linux 基本防护

chage -l root            查看用户账号信息
chage -E 2019/7/31 bob   设置账号有效期
chage -d 0 bob           强制修改密码
echo 123456 | passwd --stdin bob  设置密码

chage -l bob
最近一次密码修改时间					：密码必须更改
密码过期时间					：密码必须更改
密码失效时间					：密码必须更改
帐户过期时间						：7月 31, 2019
两次改变密码之间相距的最小天数		：0
两次改变密码之间相距的最大天数		：99999
在密码过期之前警告的天数	：7

账号的锁定/解锁
passwd -S bob   看状态
passwd -l bob   锁定 
passwd -u  bob  解锁

强制定期修改密码

添加用户的默认配置文件    /etc/login.defs

grep -v '#' /etc/login.defs

MAIL_DIR	/var/spool/mail    

PASS_MAX_DAYS	99999
PASS_MIN_DAYS	0        最小有效时间
PASS_MIN_LEN	5        密码长度
PASS_WARN_AGE	7        提前警告时间

UID_MIN                  1000
UID_MAX                 60000
SYS_UID_MIN               201
SYS_UID_MAX               999

GID_MIN                  1000
GID_MAX                 60000
SYS_GID_MIN               201
SYS_GID_MAX               999


CREATE_HOME	yes

UMASK           077

USERGROUPS_ENAB yes

ENCRYPT_METHOD SHA512 

伪装登录提示  把里面两行删除
默认会显示内核,系统版本信息
]#cat /etc/issue  本地登录 
\S                       
Kernel \r on an \m

]# cat /etc/issue.net 远程登录
\S
Kernel \r on an \m
  

文件系统安全:
禁用非必要的系统服务RHEL7
systemctl disable httpd  设置开机服务不起

禁用非必要的系统服务RHEL6
chkonfig httpd off      设置服务开机不起

锁定/解锁保护文件(给文件属性)
EXT3/EXT4
-chattr修改 
lsattr查看
控制方式  + - =
属性 i : 不可变 (immutable)
属性 a :仅可追加(append only)

添加           chattr +i /etc/resolv.conf

查看           lsattr -l /etc/resolv.conf 
     
删除            chattr -i /etc/resolv.conf


用户切换与提权
用户切换:    su  su [-] 用户   su bob 不带'-'  切换用户 系统环境不变,还是用root环境
                             su - bob   带'-'  切换用户,切换到bob用户系统环境
            su [-] -c "命令"  "目标用户"
            su - -c "systemctl restart mysqld" root
记录su 操作的日志文件:   /var/log/secure

用户提权:     sudo(设置系统普通用户可以执行root用户命令的全权限)
             
主配置文件:   /etc/sudoers
打开主配置文件方法: 推荐  1. vim /etc/sudoers :wq! 
                       2. visudo 
格式1  用户名    主机名列表=命令列表 
格式2  %用户组名  主机名列表=命令列表

工作时一定要注释92行 #%wheel ALL=(ALL)       ALL
 
 useradd dc
 echo '123456' | passwd --stdin dc
 usermod -G wheel dc

 sudo  yum -y install httpd  加入wheel组,普通用户也能有root的所有权限
 
给bob提权
bob localhost,mysql50=/usr/bin/vim /etc/my.cnf , /usr/bin/systemctl * mysqld
ssh bob@192.168.4.50 
sudo -l


用户make localhost,mysql50=/sbin/* , !/sbin/ifconfig eth0   取反
sudo ifconfig eth0
对不起，用户 make 无权以 root 的身份在 mysql50 上执行 /sbin/ifconfig eth0。

vim /etc/sudoers
Defaults logfile="/var/log/sudo"
:wq!
ssh -X make@192.168.4.50
useradd dc
ls /var/log/sudo 生成一个文本文件

配置别名(别名名称必须大写字母)
主机别名 Host_Alias  别名名称=值列表  Host_Alias  MYPC=主机名,主机名的hostname
用户别名 User_Alias  别名名称=值列表  User_Alias   MYILSERVERS=make,bob
命令别名 Cmnd_Alias  别名名称=值列表   Cmnd_Alias   MYCMND=/usr/bin/yum,/bin/rpm


ssh访问防护:           vim /etc/ssh/sshd_config            
修改sshd服务运行参数:      port 22                  改用非标准端口
                        portocol 2               启用SSH V2版协议
                        ListenAddress 0.0.0.0    本机ip地址
                        PermitRootLogin no       禁止root登录
                 
                        UseDNS no                不解析客户机地址
                        LoginGraceTime 1m        登录限时
                        MaxAuthTries 3           每次连接最多次数
设置用户黑白名单:
1.白名单   允许连接的用户     Allowusers root@192.168.4.254 dc
Allowusers   用户1 用户2 
Allowusers   组1   组2

2.黑名单   拒绝连接的用户     Denyusers  make bob 
Denyusers  用户1 用户2
Denyusers  组1   组2

SSH密钥对验证:

1.口令:    vim +65 /etc/ssh/sshd_config 
       PasswordAuthentication no 关闭口令登录           密码验证   
       PubkeyAuthentication yes                       公钥身份验证
       AuthorizedKeysFile      .ssh/authorized_keys   公钥库:存放授权客户机的公钥文本

2.密钥对:      rm -rf ~/.ssh 清除密钥对
 1.创建密钥对   ssh-keygen   ssh-keygen -f /root/.ssh/id_rsa -N ''
 
 2.把公钥传给ssh服务器 ssh-copy-id root@192.168.4.50        
 
 50机器查看公钥   ls ~/.ssh/
                authorized_keys


SELinux安全防护  
 开启seliunx          
           vim /etc/selinux/config
           SELINUX=enforcing   强制开启seliunx
           touch /.autorelabel
           reboot
           SELINUXTYPE=targeted  保护常见和关键的服务,给文件打标签(安全上下文)

sestatus 查看seliunx状态
            常用:     SELinux status:                 enabled    是否启用
                     Loaded policy name:             targeted   保护策略 
                     Current mode:                   enforcing  工作模式

查看安全上下文:                   属性构成
                                用户:角色:访问类型:选项....
  文件 ls -lZ /etc/passwd       system_u:object_r:passwd_file_t:s0
  目录 ls -ldZ /etc             system_u:object_r:etc_t:s0 
  进程 ps aux -Z |grep httpd     system_u:system_r:httpd_t:s0
  
  
属性构成:
用户:角色:访问类型:选项....
       system_u:object_r:passwd_file_t:s0
       system_u:object_r:etc_t:s0 
       system_u:system_r:httpd_t:s0

一般操作规律: 
                            
1.移动的文件,原有的上下文属性不变 
2.复制的文件,自动继承目标位置的上下文
3.新建的文件,自动继承父目录上下文  vim /var/www/html/a.html 
                           ls -ldZ /var/www/html/a.html
                           unconfined_u:object_r:httpd_sys_content_t:s0 
  
1.修改文件上下文       chcon -t httpd_sys_content_t  b.html  
2.恢复文件上下文       restorecon c.html
                     touch /.autorelabel  下次重启后全部重置

调整SELiunx布尔值 (功能开关):
                      getsebool -a               查看所有服务布尔值
                      setsebool -P 配置项 on|off  修改布尔值
                      
192.168.4.50: yum -y install vsftpd

              vim +29 /etc/vsftpd/vsftpd.conf
              xferlog_enable=YES   去掉注释,开启匿名上传下载
              mkdir /var/ftp/目录
              chmod o+w /var/ftp/目录  赋予其他人写权限
              cp 文件 /var/ftp/目录 
192.168.4.51
ftp 服务器ip
ftp> cd 目录
ftp> get 文件   下载文件
ftp> lcd 目录   切换客户端自己目录下
ftp> put 目录   上传文件

getsebool -a | grep ftp 在seliunx开启下,打开匿名写入,匿名上传开关,
ftpd_anon_write --> on
ftpd_full_access --> on

