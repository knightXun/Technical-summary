Docker容器
容器技术已经成为应用程序封装和交付的核心技术
3大内核技术核心:
Cgroups(Control Groups)-资源管理; 
NameSpace-进程隔离; 
SELinux安全
启动一个容器相当于启动一个进程,Docker不是虚拟化;Docker没有操作系统,只开一个进程;
优点:轻量级,不占内存
缺点:隔离性没有虚拟化强;共用Linux内核,安全性有先天缺陷;SELinux难以驾驭;不易监控和排错

安装Docker
环境要求: 至少64位操作系统;RHEL7版本;关闭防火墙(不是必须)

准备两台虚拟机，IP为192.168.1.31和192.168.1.32

步骤一：配置yum源
1）配置IP（虚拟机配置静态ip）docker1和docker2主机同样操作
[root@localhost ~]# echo docker1 > /etc/hostname 
[root@localhost ~]# hostname docker1
[root@localhost ~]# echo docker2 > /etc/hostname 
[root@localhost ~]# hostname docker2
[root@docker1 ~]# vim /etc/sysconfig/network-scripts/ifcfg-eth0
# Generated by dracut initrd
DEVICE="eth0"
ONBOOT="yes"
IPV6INIT="no"
IPV4_FAILURE_FATAL="no"
NM_CONTROLLED="no"
TYPE="Ethernet"
BOOTPROTO="static"
IPADDR="192.168.1.31"
PREFIX=24
GATEWAY=192.168.1.254
[root@docker1 ~]# systemctl restart network

2）配置yum客户端，配置之前openstack的扩展源(RHEL7-extras.iso)即可（docker1和docker2主机同样操作）
[root@docker1 ]# vim /etc/yum.repos.d/rhel.repo
...
[local_extras]
name=CentOS-$releasever - Extras
baseurl="ftp://192.168.1.254/extras"
enabled=1
gpgcheck=0
[root@docker2 ]# vim /etc/yum.repos.d/rhel.repo
...
[local_extras]
name=CentOS-$releasever - Extras
baseurl="ftp://192.168.1.254/extras"
enabled=1
gpgcheck=0

4）安装docker（docker1和docker2主机同样操作）
yum -y install docker
systemctl restart docker
systemctl enable docker
ifconfig     //有docker0说明环境部署完成
docker version        //查看版本

Docter镜像
Docter中容器是基于镜像启动的
镜像采用分层设计
使用快照的cow技术,确保底层数据不丢失

docker hub镜像仓库
https://hub.docker.com
官方提供的公共镜像的仓库(Registry)

docker search busybox
INDEX(名称标签)        NAME (镜像名字)                DESCRIPTION          STARS    [OFFICIAL](官方)   AUTOMATED
[docker.io] [docker.io/busybox(镜像名字)] [Busybox base image.] [1649]     [OK](ok字样官方提供)       

man docker-search 查看man帮助
Docter search:    搜索镜像
Docter pull 镜像:   下载 
Docter push 镜像:   上传

导出,备份: 格式 docker save 名称家标签:默认标签 -o[output] 文件名 
             docker save docker.io/busybox:latest -o ff.tar
导入,恢复: 格式  docker load -i  tar包名                        
              docker load -i ff.tar 

装4个包 centos.tar; redis.tar;  ubuntu.tar ;nginx.tar   

容器的命令和真机的命令是隔离的
启动centos镜像生成一个容器: docker run -it docker.io/centos:latest /bin/bash 
                         docker run it  类似于 virsh define satrt console .
然后另开一个终端查看容器信息: docker ps 类似于= virsh list


redhat   debian
rpm      dpkg
yum      apt.get

格式 : docker 选项  镜像名称 
镜像命令:          
docker images   查看镜像列表         
docker history  查看镜像制作历史
docker inspect  查看镜像底层信息
docker pull     下载镜像
docker push     上传镜像                docker pull docker.io/busybox
docker inspect  查看容器底层信息
docker rmi      删除本地镜像
docker save     镜像另存为tar包       docker save docker.io/busybox:latest -o ff.tar
docker load     使用tar包导入镜像     docker load -i ff.tar
docker search   搜索镜像
docker tag      修改镜像名称和标签     docker tag docker.io/busybox:latest ooxx:latest


容器常用命令
docker run                 运行容器
docke  ps                  查看正在运行的容器
docker stop                关闭容器
docker satrt               启动容器
docker restart             重启容器
docker inspect             查看容器底层信息
docker top                 查看容器进程列表            
docker rm $(docker ps -aq) 删除所有关闭的容器

psterr -p 0        查看上帝进程
docker attach      进入容器,exit会导致容器关闭      退出办法:ctrl + p--> q 
docker  exec       进入容器,退出时不会关闭容器
