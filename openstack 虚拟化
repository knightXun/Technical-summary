


虚拟化(virtulization)


厂商:              			 pc/服务器代表
VMware                         		  vSphere=esxi+vcenter    esxi=Linux +vmware 需要熟悉sqlserver
RedHat              		          KVM

ps -efww   查看所有进程 
ps -ef | grep qemu 

安装虚拟化服务器平台

软件包
qemu-kvm :                                 为kvm提供底层仿真支持
libvirt-daemon :                           libvirt守护进程,管理虚拟机
libvirt-client :                           用户端软件,提供客户端管理命令
libvirt-daemon-driver-qemu:                libvirt连接qemu的驱动

virt-install :                              系统安装工具
virt-manager:                               图形管理工具
virt-v2v     :                              虚拟机迁移工具
virt-p2v     :                              物理机迁移工具

systemctl start libvirtd :                   起服务

虚拟机组成:一个XML文件(虚拟机配制声明文件)和       /etc/libvirt/qemu
         一个磁盘镜像文件(虚拟机的银盘)          /var/lib/libvirt/images

虚拟机(virsh)管理操作

格式: virsh 选项  主机名

virsh list --all                        	列出所有                                     
virsh  dominfo 				        主机名查看基本信息           			 
satrt|shutdown|reboot				启动,停止,重启         			
destroy						强制关闭              		          
define|undefine					根据xml文件创建/删除    		       
console						连接                  			    

edit						修改配置                                      
autostart					设置开机自启动         		        
autostart --disable				取消开机自启动          		       
domiflist					查看网卡信息            			
domblklist					查看硬盘信息            			

 
virsh虚拟网络管理

前面加net-
net-list [--all]				列出虚拟网络             			
net-start					启动虚拟交换机       			    
net-destroy					强制停止虚拟交换机
net-define					根据xml文件创建虚拟网络 		         
net-undefine					删除一个虚拟网络设备      		     
net-edit					修改虚拟交换机的配置    			      
net-autostart					设置虚拟交换机开机自启    			     

常用磁盘镜像文件格式
特点\类型             RAW           QCOW2:(copy on write 写实复制)
KVM默认               否             是
I/O效率               高             较高
占用空间               大             小
压缩                 不支持           支持
后端盘复用            不支持           支持
快照                 不支持           支持

qemu-img虚拟机的磁盘管理命令,支持raw,qcow2,vdi,vmdk等磁盘格式

格式: qemu-img 命令 参数 快文件名称(磁盘路径)  大小

例子: qemu-img create -f /root/disk.img 50G
常用命令:
create						创建             
convert						转换磁盘格式        
info 						查看磁盘信息        
resize 						扩容磁盘空间          

qemu-img info 磁盘路径  			     查询镜像盘文件的信息 
-b 指向后端模板文件

例子: 
qemu-img info    /var/lib/libvirt/images/ooxx.img             
qemu-img create -b houduan.img -f qcow2 disk1.img  

创建名为ooxx的虚拟机    
cp .node_base.xml      /etc/libvirt/qemu/ooxx.xml                  拷贝配置文件模板
vim /etc/libvirt/qemu/ooxx.xml
第2 行: <name>新建虚拟机名称</name>
第26行:<source file='/var/lib/libvirt/images/新建虚拟机名称.img/'>
virsh define /etc/libvirt/qemu/新建虚拟机名称.xml                    创建虚拟机
virsh list --all                                                   查看新生成的虚拟机

            
网卡及配置文件
vim  /etc/sysconfig/network-scripts/ifcfg-eth0
# Generated by dracut initrd     				注释
DEVICE="eth0"                    				驱动名称,与ifconfig看到的名称一致
ONBOOT="yes"                     				开机启动
NM_CONTROLLED="no"               				不接受NeteorkManger控制
TYPE="Ethernet"                  				类型
BOOTPROTO="static"               				协议(dhcp|static|none)
PERSISTENT_DHCLIENT="yes"        

IPADDR="192.168.1.100"           				ip地址
NETMASK="255.255.255.0"          				子网掩码
GAETWAY="192.168.1.254"          				默认网关


virsh 扩容磁盘     						     思路:硬盘-->分区-->文件系统
virsh 虚拟机管理                                     实例: 为ooxx扩容磁盘 
查看虚拟机硬盘信息   domblklist                             virsh domblklist ooxx
                                                          目标     源
                                                          ------------------------------------------------
                                                          vda        /var/lib/libvirt/images/ooxx.img
                                                
blockresize --path [决对路径] --size 50G 主机名     virsh blockresize --path /var/lib/libvirt/images/ooxx.img --size 50G ooxx
                                                  virsh start --console 虚拟机名    
根分区扩容:语言必须设置为英文 LANG=C                              LANG=C 
查看硬盘                   lsblk                               lsblk           
扩容分区                   /usr/bin/growpart      /磁盘路径     growpart /dev/vda 1
查看文件系统                blkid
扩容文件系统                /usr/sbin/xfs_growfs   /跟路径       xfs_growfs /
检查                       df -h 


云计算
IaaS:既基础设施即服务
提供给消费者的服务是对所有计算基础设施的利用,包括处理cpu,内存,存储,网络和其它基本的计算资源,用户能够部署和运行任意软件,包括操作系统和应用程序
有三种用法:公有云,私有云,混合云

PaaS:(Platform-as-a-Service),意思是平台即服务
以服务器平台或者开发环境作为服务进程进行提供就成为了PaaS
PaaS运营商所需提供的服务,不仅仅是单纯的基础平台,还针对该平台的技术支持服务,甚至针对对该平台进行的应用系统开发、优化等服务
简单地说,PaaS平台是云环境中的应用基础设施服务,也可以说中间件即服务


SaaS:(Software-as-a-Service)软件即服务,是一种通过Internet提供软件的模式,厂商将应用软件统一部署在自己的服务器上,客户可以根据自己实际需求,
通过互联网向厂商定购所需的应用软件服务
用户不用再购买软件,而是向提供商租用基于Web的软件,来管理企业经营活动,不用对软件进行维护,提供商会全权管理和维护软件,同时也提供软件的离线操作和本地数据存储

Openstack:是一套IaaS解决方案
OpenStack是一个开源的云计算管理平台
以Apache许可证为授权


云计算三大服务模式
软件,应用
SaaS

平台,运行环境
PaaS

基础设施
IaaS

知名云服务商
国外:亚马逊AWK,微软Azure,IBM SCE+ ...
国外:华为云,阿里云,百度云,腾讯云



查看公网IP 
curl i




配置Openstack

1：配置yum仓库
配置三台虚拟机                                                      base-vm openstack nova01 nova02                       
                                                      
                                                      opensatck主机扩容为50G,内存为8G
                                                      virsh start openstack
                                                      virsh blockresize --path /var/lib/libvirt/images/openstack.img --size 50G openstack
硬盘:                                                                virsh console openstack
分区:                                                               growpart /dev/vda 1
文件系统:                                                           xfs_growfs /
修改内存:                                                           virsh edit openstack
2CPU，8G 内存，50G 硬盘                                          
2CPU，4.5G 内存，100G 硬盘

配置静态IP ifcfg-eth0:                                  vim  /etc/sysconfig/network-scripts/ifcfg-eth0
                                                                          # Generated by dracut initrd
												DEVICE="eth0"
												ONBOOT="yes"
												NM_CONTROLLED="no"
												TYPE="Ethernet"
												BOOTPROTO="static"
												PERSISTENT_DHCLIENT="yes"
												IPADDR=192.168.1.10
												NEMASK=255.255.255.0
												GATEWAY=192.168.1.254
openstack : 192.168.1.10
nova: 192.168.1.11, 192.168.1.12


配置主机名 /etc/hosts，能够相互 ping 通:                      配置/etc/hosts，和/etc/resolv.conf文件
										
                                                               取主机名:hostnamectl set-hostname  
                                                 openstack vim /etc/hosts              
							     192.168.1.10 openstack       
                                                 192.168.1.11 nova01                             	
							     192.168.1.12 nova02
配置 dns 服务器 /etc/resolv.conf                     vim /etc/resolv.conf  //去掉search开头的行
                                                   ; generated by /usr/sbin/dhclient-script
                                                   nameserver 192.168.1.254   DNS解析

2：测试时间服务器                                               vim /etc/chrony.conf 
                                                      server 192.168.1.254 iburst 和真机同步时间
                                                   systemctl restart chronyd                             
验证时间同步:                                                    chronyc sources -v                                             


3：配置yum仓库:
创建挂载目录:
cd /linux-soft/04/openstack/
mkdir /var/ftp/RHEL7-extras
mkdir /var/ftp/RHEL7OSP-10
手动挂载:
mount RHEL7-extras.iso  /var/ftp/RHEL7-extras/
mount RHEL7OSP-10.iso /var/ftp/RHEL7OSP-10/

vim /etc/yum.repos.d/local.repo
[local_repo]
name=CentOS-$releasever - Base
baseurl="ftp://192.168.1.254/centos-1804"
enabled=1
gpgcheck=1
[RHEL7-extras]
name=RHEL7-extras
baseurl="ftp://192.168.1.254/RHEL7-extras"
enabled=1
gpgcheck=0
[RHEL7OSP-package]
name=RHEL7OSP-package
baseurl="ftp://192.168.1.254/RHEL7OSP-10/rhel-7-server-openstack-10-rpms"
enabled=1
gpgcheck=0
[RHEL7OSP-devtools]
name=RHEL7OSP-devtools
baseurl="ftp://192.168.1.254/RHEL7OSP-10/rhel-7-server-openstack-10-devtools-rpms"
enabled=1
gpgcheck=0

4：检查基础环境

安装额外的软件包:yum install -y qemu-kvm libvirt-client libvirt-daemon libvirt-daemon-driver-qemu python-setuptools

是否卸载firewalld 和 NetworkManager:rpm -qa  | grep NetworkManager* firewalld* 一定要关,拟机要接管网络节点管理
检查配置主机网络参数（静态IP):cat /etc/sysconfig/network-scripts/ifcfg-eth0 
主机名必须能够相互 ping 通: ping openstack主机名
检查配置主机yum源（4个，10670): yum repolist
依赖软件包是否安装
检查NTP服务器是否可用:chronyc  sources -v
检查 /etc/resolv.conf 不能有 search 开头的行:cat /etc/resolv.conf 

5：部署Openstack:yum install -y openstack-packstack
自动生成应答文件:packstack --gen-answer-file answer.ini  /answer.ini与answer.txt是一样的，只是用vim打开answer.ini文件有颜色

vim answer.ini
42  CONFIG_SWIFT_INSTALL=n
45  CONFIG_CEILOMETER_INSTALL=n                   计费相关模块
49  CONFIG_AODH_INSTALL=n                         计费相关模块
53  CONFIG_GNOCCHI_INSTALL=n                      计费相关模块
75  CONFIG_NTP_SERVERS=192.168.1.254              时间服务器的地址
98  CONFIG_COMPUTE_HOSTS=192.168.1.11             添加的节点
102 CONFIG_NETWORK_HOSTS=192.168.1.10,192.168.1.11 配置云主机ip地址
333 CONFIG_KEYSTONE_ADMIN_PW=a                    修改管理员的密码
840 CONFIG_NEUTRON_ML2_TYPE_DRIVERS=flat,vxlan    驱动类型
876 CONFIG_NEUTRON_ML2_VXLAN_GROUP=239.1.1.5      设置组播地址,最后一个随意不能为0和255,其他固定
910 CONFIG_NEUTRON_OVS_BRIDGE_MAPPINGS=physnet1:br-ex  物理网桥的名称
921 CONFIG_NEUTRON_OVS_BRIDGE_IFACES=br-ex:eth0    br-ex桥的名称与eth0连接，管理eth0,网桥与哪个物理网卡连接
1179 CONFIG_PROVISION_DEMO=n   DEMO是否测试,测试的话很占内存

启动生成虚拟主机:packstack --answer-file=answer.ini 
出现这个为成功: **** Installation completed successfully ******        
6：网络管理,如果;配置上面不成功一次,不会生成下面文件,要手动配置以下文件
查看外部OVS网桥及其端口:cat /etc/sysconfig/network-scripts/ifcfg-br-ex 
ONBOOT="yes"
NM_CONTROLLED="no" 
IPADDR="192.168.1.10"
PREFIX=24
GATEWAY=192.168.1.254
DEVICE=br-ex
NAME=br-ex
DEVICETYPE=ovs
OVSBOOTPROTO="static"
TYPE=OVSBridge
查看eth0网卡配置（该网卡为OVS网桥的接口):cat /etc/sysconfig/network-scripts/ifcfg-eth0 
DEVICE=eth0
NAME=eth0
DEVICETYPE=ovs
TYPE=OVSPort
OVS_BRIDGE=br-ex
ONBOOT=yes
BOOTPROTO=none

验证OVS配置:ovs-vsctl show

7：登录openstack
需要改配置文件并重新加载: vim /etc/httpd/conf.d/15-horizon_vhost.conf
35   WSGIProcessGroup apache
36   WSGIApplicationGroup %{GLOBAL}     添加这一行,修复自带的一个BUG
重新载入配置文件:apachectl  graceful 或 systemctl restart httpd  
查看用户名和密码:ls /root/keystonerc_admin生成的文件，里面有用户名和密码
cat keystonerc_admin 
unset OS_SERVICE_TOKEN
    export OS_USERNAME=admin  //用户名
    export OS_PASSWORD=a  //密码
    export OS_AUTH_URL=http://192.168.1.10:5000/v2.0
    export PS1='[\u@\h \W(keystone_admin)]\$ '
export OS_TENANT_NAME=admin
export OS_REGION_NAME=RegionOne


添加额外计算节点
1)更改answer.ini文件
[root@openstack ~]# vim answer.ini        //在openstack上面操作
98 CONFIG_COMPUTE_HOSTS=192.168.1.11,192.168.1.12    
102 CONFIG_NETWORK_HOSTS=192.168.1.10,192.168.1.11,192.168.1.12 
[root@openstack ~]# packstack --answer-file answer.ini
**** Installation completed successfully ******
2）这时浏览器访问时不出现页面，15-horizon_vhost.conf文件被还原，需要重新修改这个文件
[root@openstack ~]# cd /etc/httpd/conf.d/  
[root@openstack conf.d]# vi 15-horizon_vhost.conf
     35   WSGIProcessGroup apache            
     36   WSGIApplicationGroup %{GLOBAL}     //添加这一行
[root@openstack conf.d]# apachectl  graceful  //重新载入配置文件
3)查看登录用户:[root@openstack ~]# cat /root/keystonerc_admin   
 unset OS_SERVICE_TOKEN
    export OS_USERNAME=admin             用户
    export OS_PASSWORD=1bb4c987345c45ba  密码
实时监控:watch -n 1 '命令'    列子:看内存watch -n 1 'free -m'


分屏软件包:screen 横屏 先 ctrl+A  在shift+s  竖屏 先:ctrl+A 在  shift+| 
切换命令行: ctrl+A+tab  ctrl+A+c
退出:ctrl+A ctrl+d
vim -O /etc/passwd /etc/shadow



项目管理基本概念:
项目:一组隔离的资源和对象.由一组关联的用户进行管理;在旧版本里,也用租户(tenant)来表示;根据配置的需求,项目对应一个
组织、一个公司或是一个使用客户等;项目中可以有多个用户,项目中的用户可以在该项目创建、管理虚拟资源;具有admin角色的
用户可以创建项目;项目相关信息保存到MariaDB中.
缺省情况下,packstack安装的openstack中有两个独立的项目
admin:只有admin管理员可以创建项目.
services:与安装的各个服务关联.

项目命令行管理项目:                                                 创建名为dc项目
创建项目:openstack project create 项目名称                   openstack project create  dc
列出所有项目:openstack project list 
查看某一个项目详细信息:openstack project show  项目名称      openstack project show   dc
修改用户密码:格式 openstack user set --password [密码] [用户] 
禁用与激活项目:openstack project set --disable/enable 项目名称
查看项目配额:nova quota-show --tenant 项目名称
更新可用vcpu数据为30:nova qupta-update --cores 30 项目名称
删除项目:openstack project delete 项目名称

云主机类型基本概念:一个云主机类型对应一个xml文件(就是资源的模板);它定义了一台云主机可以使用的资源,
如内存大小、磁盘容量和CPU核心数等;管理员自定义云主机类型

镜像基本概念:在红帽openstack平台中,镜像指的是虚拟磁盘文件,磁盘文件中应该已经安装了可启动的操作系统;镜像管理功能由Glance服务提供;它形成了创建虚拟机实例最底层的块结构;镜像可以由用户上传,也可以通过
红帽官方站点下载.
Glance磁盘格式:raw;vhd;vmdk;vdi;iso;qcow2

镜像服务:提供了服务器镜像的拷贝、快照功能,可以作为模板快速建立、启动服务器;镜像服务维护了镜像的一致性;在上传镜像时,容器格式必须指定;容器格式指示磁盘文件格式是否包含了虚拟机元数据
镜像容器格式:bare;ovf;ova;aki;ami

openstack网络工作原理:
实例被分配到子网中,以实现网络连通性;每个项目可以有一到多个子网;在红帽的openstack平台中,openstack
服务是缺省的网络选项,nova网络服务作为备用;管理员能够配置丰富的网络,将其他openstack服务链接到这些
网络的接口上;每个项目都能有多个私有网络,各个项目的私有网络互相不受干扰
网络类型:项目网络:由Neutron提供的项目内部网络,网络间用vlan隔离;
外部网络:可以让虚拟机链接外部网络,但需要配置浮动IP地址;
提供商网络:将实例连接到现有网络,实现虚拟机实例与外部系统共享同一二层网络.



通过命令行管理镜像:
后端盘路径:/linux-soft/04/openstack/small.qcow2    磁盘镜像名:small_rhel6
上传镜像:openstack image creat --diskformat qcow2 --min-disk 10 --min-ram 512 --file /后端盘(镜像绝对路径.img)  磁盘镜像

列出镜像:openstack image list 
查看镜像详情:openstack image show 磁盘镜像      openstack image  show  small_rhel6
修改镜像属性:openstack image set --public 磁盘镜像
另存镜像为本地文件:openstack image save --file /本地路径.img 磁盘镜像
删除镜像:openstack image delete 磁盘镜像


分配地址格式:[起始地址,终止地址] 列子:[10.10.10.100,10.10.10.200]

出现云主机处于错误状态:systemctl status openstack-nova-compute.service 
控制台1046错误:看 8430行 /etc/nova/nova.conf 

1.创建管理项目:创建tedu项目--->创建uu用户--->通过Horizon进行配额调整
2.新建云主机类型:通过Horizon创建云主机类型
3.上传镜像:项目-->计算--->镜像
4.创建网络:
1)登陆admin用户,管理员-->创建外网A(网络-->创建网络供应商flat类型直连-->物理网络--->段ip-->打钩共享的和外部网络)-->子网
2)退出admin用户,登陆uu用户,创建A公网的子网wan(名称,真机网段192.168.1.1.0/24,网关192.168.1.254)-
-->A外网不需要激活DHCP
创建内网lan,UP,只勾创建子网,不勾共享-->子网名称lan-->10.10.11.0/24-->ipv4-->网关ip10.10.11.254-->子网详情:激活DHCP分配地址池10.10.11.100,10.10.11,200-->DNS服务器192.168.1.254
新建路由:route1-->UP-->公网A-->选择路由子网: lan 10.10.11.0/24-->ip地址10.10.11.254
5.管理浮动IP地址:项目-->计算-->访问和安全(分配ip给项目)
6：创建安全组及规则:项目-->计算-->访问和安全(创建安全组)-->管理规则:添加自己要的规则
7：创建云主机:详情-->源(选择源(镜像)-->创建新卷(否)-->分配下面系统)--->云主机类型(看套餐选择配置)
网络(可选公网或私网)-->安全组(自定义规则如:ssh入口)

 
安装opensatck排错方法
1)ntp时间不同步 Error:/usr/sbin/ntpdate
2)网桥名称写错:   Error:/usr/bin/ovs-vsctl list-ports br-exeth0 no  改正921行
3)yum源没有配置正确  Error :/usr/bin/yum -d 0 -e 0 -y install openstack dashboard 
改正:gpgcheck=0
4)出现Cannot allocate memory 内存不足,重新启动主机
5)访问openstack错误, 修改Apache配置文件 
6)rabbitmp-server没有起来   /systemctl start rabbtmq-server  改正:systemctl restart rabbtmq-server 或着 
7)创建cinder-volumes卷组失败 ERROR:the cinder 
8)如果/root/
9)出现/usr/bin/systemctl start openvswith ....falied,说明是ssse3指令集的错误  编辑openstart的xml文件    vim 
10)Could appeared during...'ascii'...  出现中文中文符号
11)控制台出现1006 falled to connect server (code:1006) 改正:vim /etc/nova/nova.conf 8430行,把域名添加到/etc/hosts里面,保证这个域名可以ping通
12)无法获取使用量信息,添加云主机失败 :内存才能太小
13)Connected-                                重启openstart-nova-console
14)云主机出现错误状态    重启opensatack主机(opensatck-nova-compute),或内网出现问题,
15)云主机热迁移失败    1.是否ping通  2. 创建的云主机有问题,不用共享存储,必须使用镜像文件
opensatck is not onstorage BLOCK ....
17)无可用端口    
18)主机ping不通浮动ip    1.是否关联浮动ip,关联后刷新即可
19)删除网络失败在哪个用户上面创建的就在那删除;从右往左删
20)创建角色失败 ERROE:...openstack role list... 查看mysql redis mongodb rabbitmp是否启动




